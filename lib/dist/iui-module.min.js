"use strict";!function(){angular.module("iui.loadingIndicator",["cgBusy"])}(),function(){function LoadingLabelController(){}angular.module("iui.loadingIndicator").directive("iuiLoadingLabel",["$compile","$q",function($compile,$q){var directive={restrict:"A",controller:LoadingLabelController,controllerAs:"loadingLabel",scope:{iuiLoadingLabel:"@",promise:"="},link:function(scope,element,attrs){var currentMessage="<span>"+element.text()+"</span>",loadingMessage="<span>"+scope.iuiLoadingLabel+"</span>",loadingLabel=function(newValue,oldValue){var el;newValue?(element.empty(),el=$compile(loadingMessage)(scope),element.append(el)):(element.empty(),el=$compile(currentMessage)(scope),element.append(el)),$q.when(scope.promise).then(function(){scope.promise=null})};scope.$watch("promise",loadingLabel)}};return directive}])}(),function(module){try{module=angular.module("iui.loadingIndicator")}catch(e){module=angular.module("iui.loadingIndicator",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("/$iui-loading-indicator/iui-loading-label/iui-loading-label.html","<section>\n  {{loadingLabel.currentMessage}}\n</section>")}])}(),angular.module("cgBusy",[]),angular.module("cgBusy").factory("_cgBusyTrackerFactory",["$timeout","$q",function($timeout,$q){return function(){var tracker={};tracker.promises=[],tracker.delayPromise=null,tracker.durationPromise=null,tracker.delayJustFinished=!1,tracker.reset=function(options){tracker.minDuration=options.minDuration,tracker.promises=[],angular.forEach(options.promises,function(p){p&&!p.$cgBusyFulfilled&&addPromiseLikeThing(p)}),0!==tracker.promises.length&&(tracker.delayJustFinished=!1,options.delay&&(tracker.delayPromise=$timeout(function(){tracker.delayPromise=null,tracker.delayJustFinished=!0},parseInt(options.delay,10))),options.minDuration&&(tracker.durationPromise=$timeout(function(){tracker.durationPromise=null},parseInt(options.minDuration,10)+(options.delay?parseInt(options.delay,10):0))))},tracker.isPromise=function(promiseThing){var then=promiseThing&&(promiseThing.then||promiseThing.$then||promiseThing.$promise&&promiseThing.$promise.then);return"undefined"!=typeof then},tracker.callThen=function(promiseThing,success,error){var promise;promiseThing.then||promiseThing.$then?promise=promiseThing:promiseThing.$promise?promise=promiseThing.$promise:promiseThing.denodeify&&(promise=$q.when(promiseThing));var then=promise.then||promise.$then;then.call(promise,success,error)};var addPromiseLikeThing=function(promise){if(!tracker.isPromise(promise))throw new Error("cgBusy expects a promise (or something that has a .promise or .$promise");-1===tracker.promises.indexOf(promise)&&(tracker.promises.push(promise),tracker.callThen(promise,function(){promise.$cgBusyFulfilled=!0,-1!==tracker.promises.indexOf(promise)&&tracker.promises.splice(tracker.promises.indexOf(promise),1)},function(){promise.$cgBusyFulfilled=!0,-1!==tracker.promises.indexOf(promise)&&tracker.promises.splice(tracker.promises.indexOf(promise),1)}))};return tracker.active=function(){return tracker.delayPromise?!1:tracker.delayJustFinished?(tracker.delayJustFinished=!1,0===tracker.promises.length&&(tracker.durationPromise=null),tracker.promises.length>0):tracker.durationPromise?!0:tracker.promises.length>0},tracker}}]),angular.module("cgBusy").value("cgBusyDefaults",{}),angular.module("cgBusy").directive("cgBusy",["$compile","$templateCache","cgBusyDefaults","$http","_cgBusyTrackerFactory",function($compile,$templateCache,cgBusyDefaults,$http,_cgBusyTrackerFactory){return{restrict:"A",link:function(scope,element,attrs,fn){var position=element.css("position");("static"===position||""===position||"undefined"==typeof position)&&element.css("position","relative");var templateElement,backdropElement,currentTemplate,templateScope,backdrop,tracker=_cgBusyTrackerFactory(),defaults={templateUrl:"angular-busy.html",delay:0,minDuration:0,backdrop:!0,message:"Please Wait...",wrapperClass:"cg-busy cg-busy-animation"};angular.extend(defaults,cgBusyDefaults),scope.$watchCollection(attrs.cgBusy,function(options){if(options||(options={promise:null}),angular.isString(options))throw new Error("Invalid value for cg-busy. cgBusy no longer accepts string ids to represent promises/trackers.");(angular.isArray(options)||tracker.isPromise(options))&&(options={promise:options}),options=angular.extend(angular.copy(defaults),options),options.templateUrl||(options.templateUrl=defaults.templateUrl),angular.isArray(options.promise)||(options.promise=[options.promise]),templateScope||(templateScope=scope.$new()),templateScope.$message=options.message,angular.equals(tracker.promises,options.promise)||tracker.reset({promises:options.promise,delay:options.delay,minDuration:options.minDuration}),templateScope.$cgBusyIsActive=function(){return tracker.active()},templateElement&&currentTemplate===options.templateUrl&&backdrop===options.backdrop||(templateElement&&templateElement.remove(),backdropElement&&backdropElement.remove(),currentTemplate=options.templateUrl,backdrop=options.backdrop,$http.get(currentTemplate,{cache:$templateCache}).success(function(indicatorTemplate){if(options.backdrop="undefined"==typeof options.backdrop?!0:options.backdrop,options.backdrop){var backdrop='<div class="cg-busy cg-busy-backdrop cg-busy-backdrop-animation ng-hide" ng-show="$cgBusyIsActive()"></div>';backdropElement=$compile(backdrop)(templateScope),element.append(backdropElement)}var template='<div class="'+options.wrapperClass+' ng-hide" ng-show="$cgBusyIsActive()">'+indicatorTemplate+"</div>";templateElement=$compile(template)(templateScope),angular.element(templateElement.children()[0]).css("position","absolute").css("top",0).css("left",0).css("right",0).css("bottom",0),element.append(templateElement)}).error(function(data){throw new Error("Template specified for cgBusy ("+options.templateUrl+") could not be loaded. "+data)}))},!0)}}}]);